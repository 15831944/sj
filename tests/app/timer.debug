anon1()'stack anon1 {
  this
}

anon2()'stack anon2 {
  this
}

anon3()'stack anon3 {
  this
}

anon4()'stack anon4 {
  this
}

anon5(normal'i32:, hot'i32:, pressed'i32:)'stack anon5 {
  this
}

anon6()'stack anon6 {
  this
}

anon7()'stack anon7 {
  this
}

anon8(fill'i32:, left'i32:, right'i32:, top'i32:, bottom'i32:)'stack anon8 {
  this
}

borderLayout #element (children'stack array_heap_element:, rect'stack rect=)'heap borderLayout {
  this
}

runLoop()'void {
  c{

##ifdef EMSCRIPTEN
	emscripten_set_main_loop((em_callback_func)sjf_mainLoop, 0, 0);
	exit(0);
##else
	bool quit = false;
    while (!quit) {
        sjf_mainLoop();
    }
##endif	
	
}c
}

sdlSurface #surface (size'stack size:, win'ptr=, ren'ptr=)'heap sdlSurface {
  c{

		if (SDL_Init(SDL_INIT_VIDEO) != 0) {
	        printf("SDL_Init Error: %s\n", SDL_GetError());
	        exit(-1);
	    }

	    if (TTF_Init() != 0) {
	        printf("TTF_Init Error: %s\n", SDL_GetError());
	        exit(-1);
	    }

	    _this->win = (uintptr_t)SDL_CreateWindow("Hello World!", 100, 100, _this->size.w, _this->size.h, SDL_WINDOW_SHOWN | SDL_WINDOW_RESIZABLE);
	    if (_this->win == 0) {
	        printf("SDL_CreateWindow Error: %s\n", SDL_GetError());
	        exit(-1);
	    }

	    _this->ren = (uintptr_t)SDL_CreateRenderer((SDL_Window*)_this->win, -1, SDL_RENDERER_ACCELERATED | SDL_RENDERER_PRESENTVSYNC);
	    if (_this->ren == 0) {
	        printf("SDL_CreateRenderer Error: %s\n", SDL_GetError());
	        exit(-1);
	    }
	
}c
  this
}

global()'void {
  borderPosition'stack anon8 : anon8(this = anon8(
    fill'i32 : this.fill,
    left'i32 : this.left,
    right'i32 : this.right,
    top'i32 : this.top,
    bottom'i32 : this.bottom
  ))
  style'stack anon7 : anon7(this = anon7())
  colors'stack anon6 : anon6(this = anon6())
  buttonState'stack anon5 : anon5(this = anon5(
    normal'i32 : this.normal,
    hot'i32 : this.hot,
    pressed'i32 : this.pressed
  ))
  convert'stack anon4 : anon4(this = anon4())
  random'stack anon3 : anon3(this = anon3())
  parse'stack anon2 : anon2(this = anon2())
  console'stack anon1 : anon1(this = anon1())
  cdefine{

	#include(<emscripten.h>, EMSCRIPTEN)
	#include(<emscripten/html5.h>, EMSCRIPTEN)
	#include(<SDL.h>, EMSCRIPTEN)
	#include(<SDL_ttf.h>, EMSCRIPTEN)
    #include(<SDL_image.h>, EMSCRIPTEN)
	#include(<SDL.h>, WIN32)
	#include(<SDL_ttf.h>, WIN32)
    #include(<SDL_image.h>, WIN32)
	#include(<SDL2/SDL.h>, __APPLE__)
	#include(<SDL2_ttf/SDL_ttf.h>, __APPLE__)
    #include(<SDL2_image/SDL_image.h>, __APPLE__)

}cdefine
  frame'i32 = 0i
  i32_max'i32 : (-2147483647 - 1)i
  i32_min'i32 : 2147483647i
  u32_max'u32 : (uint32_t)4294967295uu
  rootSurface'heap #surface : sdlSurface(this = sdlSurface(
    size'stack size : this.size,
    win'ptr = this.win,
    ren'ptr = this.ren
  )) as heap #surface
  root'heap #element : borderLayout(this = borderLayout(
    children'stack array_heap_element : this.children,
    rect'stack rect = this.rect
  )) as heap #element
  runLoop()
  void
}

