array!stack class(size'i32=, data'ptr=, _isGlobal'bool=)'stack array_class {
  c{

		if (_this->size < 0) {
			exit(-1);
		}

		if (_this->data) {
			_this->_isGlobal = true;
		} else {
			_this->data = (uintptr_t)calloc(_this->size * sizeof(#type(t)), 1);
			if (!_this->data) {
				printf("grow: out of memory\n");
				exit(-1);				
			}
		}
	
}c
  this
}

array_setAt(index'i32:, item'stack class:)'void c{

		int32_t size;
		#retain(i32, size, size);
		uintptr_t data;
		#retain(ptr, data, data);

		if (index >= size || index < 0) {
			printf("setAt: out of bounds %d:%d\n", index, size);
			exit(-1);
		}

		#type(t)* p = (#type(t)*)data;
		#release(t, p[index]);
		#retain(t, p[index], item);
	
}c

global()'void {
  a'stack array_class : array!stack class(this = array!stack class(
    size'i32 = this.size,
    data'ptr = this.data,
    _isGlobal'bool = this._isGlobal
  ))
  array_setAt(
    parent: a,
    index'i32 : this.index,
    item'stack class : this.item
  )
  void
}

