anon1([heap]test'i32:) {
  this
}

anon1_sub([heap]x'i32:, [heap]y'i32:) {
  this.x - this.y - .parentthis.test
}

class() {
  this
}

class_bar([heap]x'i32:) {
  [heap]class_foo([stack]this : class_foo(
    parent: [stack]this,
    [heap]x'i32 : this.x
  ))
}

class_foo([heap]x'i32:) {
  if this.x > 0 {
    [heap]class_bar([stack]this : class_bar(
      parent: [stack]this,
      [heap]x'i32 : anon1_sub([stack]this : anon1_sub(
        parent: [heap].parent.parentthis.math,
        [heap]x'i32 : this.x,
        [heap]y'i32 : 1
      ))
    ))
  } else {
    0
  }
}

global {
  [heap]math'anon1 : [heap]anon1([heap]this : anon1(
    [heap]test'i32 : 1
  ))
  [stack]c'class : [stack]class([stack]this : class(
    parent: [stack]this
  ))
  [heap]class_foo([stack]this : class_foo(
    parent: [stack]c,
    [heap]x'i32 : 4
  ))
  void
}

