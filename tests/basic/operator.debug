fancyMath([heap]x'i32:)'fancyMath {
  this
}

fancyMath_add([stack]num'fancyMath:)'fancyMath {
  [heap]fancyMath([heap]this : fancyMath(
    [heap]x'i32 : .parentthis.x + [heap]fancyMath_getX([stack]this : fancyMath_getX(
      parent: [stack]this.num
    )) + 1
  ))
}

fancyMath_divide([stack]num'fancyMath:)'fancyMath {
  [heap]fancyMath([heap]this : fancyMath(
    [heap]x'i32 : .parentthis.x / [heap]fancyMath_getX([stack]this : fancyMath_getX(
      parent: [stack]this.num
    )) + 1
  ))
}

fancyMath_getX()'i32 {
  .parentthis.x
}

fancyMath_increment()'fancyMath {
  [heap]fancyMath([heap]this : fancyMath(
    [heap]x'i32 : .parentthis.x + 1
  ))
}

fancyMath_modulus([stack]num'fancyMath:)'fancyMath {
  [heap]fancyMath([heap]this : fancyMath(
    [heap]x'i32 : .parentthis.x %% [heap]fancyMath_getX([stack]this : fancyMath_getX(
      parent: [stack]this.num
    )) + 1
  ))
}

fancyMath_multiply([stack]num'fancyMath:)'fancyMath {
  [heap]fancyMath([heap]this : fancyMath(
    [heap]x'i32 : .parentthis.x * [heap]fancyMath_getX([stack]this : fancyMath_getX(
      parent: [stack]this.num
    )) + 1
  ))
}

fancyMath_subtract([stack]num'fancyMath:)'fancyMath {
  [heap]fancyMath([heap]this : fancyMath(
    [heap]x'i32 : .parentthis.x - [heap]fancyMath_getX([stack]this : fancyMath_getX(
      parent: [stack]this.num
    )) + 1
  ))
}

global()'void {
  [heap]a'fancyMath : [heap]fancyMath([heap]this : fancyMath(
    [heap]x'i32 : 1
  ))
  [heap]b'fancyMath : [heap]fancyMath([heap]this : fancyMath(
    [heap]x'i32 : 2
  ))
  [heap]c'fancyMath = [heap]fancyMath_add([stack]this : fancyMath_add(
    parent: [heap]a,
    [stack]num'fancyMath : b
  ))
  [heap]d'fancyMath = [heap]fancyMath_subtract([stack]this : fancyMath_subtract(
    parent: [heap]a,
    [stack]num'fancyMath : b
  ))
  [heap]e'fancyMath = [heap]fancyMath_multiply([stack]this : fancyMath_multiply(
    parent: [heap]a,
    [stack]num'fancyMath : b
  ))
  [heap]f'fancyMath = [heap]fancyMath_divide([stack]this : fancyMath_divide(
    parent: [heap]a,
    [stack]num'fancyMath : b
  ))
  [heap]g'fancyMath = [heap]fancyMath_modulus([stack]this : fancyMath_modulus(
    parent: [heap]a,
    [stack]num'fancyMath : b
  ))
  c = [heap]fancyMath_add([stack]this : fancyMath_add(
    parent: [heap]c,
    [stack]num'fancyMath : c
  ))
  d = [heap]fancyMath_subtract([stack]this : fancyMath_subtract(
    parent: [heap]d,
    [stack]num'fancyMath : d
  ))
  d = [heap]fancyMath_multiply([stack]this : fancyMath_multiply(
    parent: [heap]d,
    [stack]num'fancyMath : d
  ))
  d = [heap]fancyMath_divide([stack]this : fancyMath_divide(
    parent: [heap]d,
    [stack]num'fancyMath : d
  ))
  e = [heap]fancyMath_increment([stack]this : fancyMath_increment(
    parent: [heap]e
  ))
  f = [heap]fancyMath_increment([stack]this : fancyMath_increment(
    parent: [heap]f
  ))
  [heap]i'i32 = [heap]fancyMath_getX([stack]this : fancyMath_getX(
    parent: [heap]f
  ))
  void
}

