-- features --
* interface
* operators
* array assignment
* lambda

-- interface --
* cast from interface to another interface
* call interace method

void* foo_asInterface(sjs_object* _parent, int sji_foo_id) {
	switch (sji_foo_id) {
	case sji_foo_id:
		return foo_asFoo(_parent);
	}
	return nullptr;
}

-- operators --
	a.x = y 	-> setX(y)
	a as type	-> a.asType()'t

-- array assignment --
* special array assign operation
	func() { [1, 2] }
	[a:, b=] func()
	a : t.getAt(0)
	b = t.getAt(1)

-- library --
* directory structure for pure sj library
lib/common/common.sj
lib/common/array.sj
lib/common/string.sj
lib/common/tuple.sj

* directory structure for linked library
* link command: link "freetype.lib"
lib/freetype/freetype.sj
lib/freetype/freetype.h
lib/freetype/freetype.lib
lib/freetype/source/*