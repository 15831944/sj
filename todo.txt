* fix mac build:
brew install llvm && rm /usr/local/opt/emscripten/libexec/llvm/bin/llvm-ar && ln -s /usr/local/opt/llvm/bin/llvm-ar /usr/local/opt/emscripten/libexec/llvm/bin/llvm-ar

emcc benchmark.c ../texture-atlas.c ../vector.c ../vertex-buffer.c ../vertex-attribute.c ../texture-font.c ../utf8-utils.c ../distance-field.c shader.c mat4.c ../edtaa3func.c -I.. -L.. -s USE_SDL=2 -s USE_WEBGL2=1 -s USE_FREETYPE=1 -o benchmark.html -s ALLOW_MEMORY_GROWTH=1 --preload-file fonts --preload-file shaders -s WASM=1

* move freetype-gl into sj files
* get app to start on windows, os x, and wasm
* show text

* freetype-gl https://github.com/rougier/freetype-gl
* libpng: https://github.com/DavidEGrayson/ahrs-visualizer/blob/master/png_texture.cpp


* use #line pragma directive
* de-dup global strings
* stack optional
* second assignment to this var does not free
* improve debug out for interfaces
* override interfaces : a as type   -> a.asType()'t
* two buttons for +/-

-- features --
* map
* callback
* lambda
* weak pointer

-- lambda --
array!item(
	each(lambda : '(item)void) {
		for i : 0 to size {
			lambda(getAt(i))
		}
	}
)

arr : [1, 2, 3]
total = 0
arr.each((i:'i32) {
	total += i
	void
})

// definition
struct sjl_anon1 {
	int _refCount
	sjs_object* _parent;
	void (*lambda)(sjs_object*, int32_t)
}

void sjl_anon1_destroy(sjl_anon1 *_this) {
	_this->_parent->_refCount--;
}

// invoke
void array_each() {
	item = array_getAt();
	lambda->lambda(lambda->_parent, item);
}

// create
void sjf_anon2(sjs_func* _parent, int32_t i) {
	_parent->total += i;
}

x = new sjl_anon1
x->_refCount = 1;
x->_parent = _this;
x->_parent->_refCount++;
x->lambda = sjf_anon2;
array_each(arr, x);