-- nau --
* show people in field
* animate camera on person click

-- ui --
* load obj file: http://kixor.net/dev/objloader/ https://code.google.com/archive/p/saitoobjloader/ http://people.sc.fsu.edu/%7Ejburkardt/data/obj/obj.html
* sphere - default to front of sphere being middle of texture
* center text

-- language --
* switch
* multiply[Type]() to handle mat4 * vec4
* error for double function def
* make function/var names case insentive
* better error when using "value" as var name
* weak pointer
* stack optional
* stack interface
* improve debug out for interfaces
* override interfaces : a as type   -> a.asType()'t
* interface as struct heap: { _parent, _vtbl, _destroy } or stack: { _parent, _vtbl }
* do not allow local typeMode return for variable that is not part of the class
	func()'local string { "c" } // this must fail
	func()'stack string { copy "c" } // okay
	func()'heap string { heap "c" } // okay
* map
* lambda

-- switch --
switch x {
	case 0 {

	}
	case _ == 2 {

	}
	default {

	}
}

-- lambda --
count := 0
a : [1, 2, 3]
a.map((y : 'i32) {
	count += y
})
===
count := 0
a : [1, 2, 3]
lambda1(
	count := 'i32
	invoke(y : 'i32) {
		count += y
	}
) 
lambda1 : lambda1(count := count)
a.map(lambda1.invoke)
count = lambda1.count

* fix mac build:
brew install llvm && rm /usr/local/opt/emscripten/libexec/llvm/bin/llvm-ar && ln -s /usr/local/opt/llvm/bin/llvm-ar /usr/local/opt/emscripten/libexec/llvm/bin/llvm-ar