-- ui --
* sphere - default to front of sphere being middle of texture
* load obj file: http://kixor.net/dev/objloader/ https://code.google.com/archive/p/saitoobjloader/ http://people.sc.fsu.edu/%7Ejburkardt/data/obj/obj.html
* center text
* animation

-- language --
* callback
* use #line pragma directive
* better design to enum
* better design for namespaces
* := for first time mutable assignment
* second assignment to this var does not free
* stack optional
* stack interface
* de-dup global strings
* improve debug out for interfaces
* map
* lambda
* weak pointer
* override interfaces : a as type   -> a.asType()'t

-- animation -- 
x.animateTextColor(color(1, 0, 0))

buttonElement(
	setTextColor ...

	animateTextColor(toColor : 'color, duration : 'i32) {
		animator.animations.add(
			animation!color(
				start : animator.currentTime
				end : animator.currentTime + duration as i64
				startValue : _textColor
				endValue : toColor
				setValue : setTextColor
			) as #animation)
	}
)

#animation(
	nextFrame()'bool
)

animation!t #animation (
	start : 'i64
	startValue : 't
	end : 'i64
	endValue : 't
	setValue : '(:'t)void

	nextFrame(time'i64)'bool {
		percent = ((time - start) / (end - start)) as f32
		if percent < 0.0f {
			percent = 0.0f
			void
		} else if percent > 1.0f {
			percent = 1.0f
			void
		}

		// interoplate & set value
		setValue(startValue.interpolate(endValue, percent))
		// If after end return false
		percent == 1.0f
	}
) { this }

animator(
	animations : array!#animation()
	currentTime = 'i64

	nextFrame(time : 'i64) {
		// Iterate and remove all that return false
	}
) { this }

-- lambda --
array!item(
	each(lambda : '(item)void) {
		for i : 0 to size {
			lambda(getAt(i))
		}
	}
)

arr : [1, 2, 3]
total = 0
arr.each((i:'i32) {
	total += i
	void
})

// definition
struct sjl_anon1 {
	int _refCount
	sjs_object* _parent;
	void (*lambda)(sjs_object*, int32_t)
}

void sjl_anon1_destroy(sjl_anon1 *_this) {
	_this->_parent->_refCount--;
}

// invoke
void array_each() {
	item = array_getAt();
	lambda->lambda(lambda->_parent, item);
}

// create
void sjf_anon2(sjs_func* _parent, int32_t i) {
	_parent->total += i;
}

x = new sjl_anon1
x->_refCount = 1;
x->_parent = _this;
x->_parent->_refCount++;
x->lambda = sjf_anon2;
array_each(arr, x);

* fix mac build:
brew install llvm && rm /usr/local/opt/emscripten/libexec/llvm/bin/llvm-ar && ln -s /usr/local/opt/llvm/bin/llvm-ar /usr/local/opt/emscripten/libexec/llvm/bin/llvm-ar